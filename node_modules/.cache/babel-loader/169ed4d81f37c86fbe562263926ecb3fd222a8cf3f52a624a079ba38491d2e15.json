{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_cache[0] || (_cache[0] = _createTextVNode(\" DashBoard \")), _createVNode(_component_router_view)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createTextVNode","_createVNode","_component_router_view"],"sources":["C:\\Users\\yifan\\Desktop\\homework\\vuejs\\alley-vueproj\\src\\views\\DashBoard.vue"],"sourcesContent":["<template>\n  DashBoard\n  <router-view />\n</template>\n<router-view />\n<script>\nexport default {\n  created() {\n    const token = document.cookie.replace(\n      /(?:(?:^|.*;\\s*)hexToken\\s*=\\s*([^;]*).*$)|^.*$/,\n      '$1',\n    );\n\n    const api = `${process.env.VUE_APP_API}api/user/check`;\n    this.$http.defaults.headers.common.Authorization = token;\n    this.$http.post(api, this.user)\n      .then((res) => {\n        console.log(res);\n        if (!res.data.success) {\n          this.$router.push('login');\n        }\n      });\n  },\n};\n</script>\n"],"mappings":";;;uBAAAA,mBAAA,CAAAC,SAAA,S,0BAAAC,gBAAA,CAAU,aAER,IAAAC,YAAA,CAAeC,sBAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}