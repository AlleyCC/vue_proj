{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createStaticVNode as _createStaticVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Loading = _resolveComponent(\"Loading\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_Loading, {\n    active: $data.isLoading\n  }, null, 8 /* PROPS */, [\"active\"]), _cache[0] || (_cache[0] = _createStaticVNode(\"<div class=\\\"my-5 row justify-content-center\\\"><form class=\\\"col-md-6\\\"><table class=\\\"table align-middle\\\"><thead><tr></tr><th>品名</th><th>數量</th><th>單價</th></thead><tbody><tr><td>產品</td><td>1 / 個</td><td class=\\\"text-end\\\">100</td></tr></tbody><tfoot><tr><td colspan=\\\"2\\\" class=\\\"text-end\\\">總計</td><td class=\\\"text-end\\\">100</td></tr></tfoot></table><table class=\\\"table\\\"><tbody><tr><th width=\\\"100\\\">Email</th><td>abc@gmail.com</td></tr><tr><th>姓名</th><td>AA</td></tr><tr><th>收件人電話</th><td>0987654321</td></tr><tr><th>收件人地址</th><td>Address</td></tr><tr><th>付款狀態</th><td><span>尚未付款</span><span class=\\\"text-success\\\">付款完成</span></td></tr></tbody></table><div class=\\\"text-end\\\"><button class=\\\"btn btn-danger\\\">確認付款去</button></div></form></div>\", 1))], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createVNode","_component_Loading","active","$data","isLoading","_createStaticVNode"],"sources":["C:\\Users\\yifan\\Desktop\\homework\\vuejs\\alley-vueproj\\src\\views\\Orders.vue"],"sourcesContent":["<template>\n  <Loading :active=\"isLoading\"> </Loading>\n<div class=\"my-5 row justify-content-center\">\n  <form class=\"col-md-6\">\n    <table class=\"table align-middle\">\n      <thead>\n        <tr>\n          \n        </tr>\n      <th>品名</th>\n      <th>數量</th>\n      <th>單價</th>\n      </thead>\n      <tbody>\n      <tr>\n        <td>產品</td>\n        <td>1 / 個</td>\n        <td class=\"text-end\">100</td>\n      </tr>\n      </tbody>\n      <tfoot>\n      <tr>\n        <td colspan=\"2\" class=\"text-end\">總計</td>\n        <td class=\"text-end\">100</td>\n      </tr>\n      </tfoot>\n    </table>\n\n    <table class=\"table\">\n      <tbody>\n      <tr>\n        <th width=\"100\">Email</th>\n        <td>abc@gmail.com</td>\n      </tr>\n      <tr>\n        <th>姓名</th>\n        <td>AA</td>\n      </tr>\n      <tr>\n        <th>收件人電話</th>\n        <td>0987654321</td>\n      </tr>\n      <tr>\n        <th>收件人地址</th>\n        <td>Address</td>\n      </tr>\n      <tr>\n        <th>付款狀態</th>\n        <td>\n          <span>尚未付款</span>\n          <span class=\"text-success\">付款完成</span>\n        </td>\n      </tr>\n      </tbody>\n    </table>\n    <div class=\"text-end\">\n      <button class=\"btn btn-danger\">確認付款去</button>\n    </div>\n  </form>\n</div>\n</template>\n<script>\n\nexport default {\n  data() {\n    return {\n      products: [],\n      pagination: {},\n      tempProduct: {},\n      isNew: true,\n      isLoading: false,\n    };\n  },\n  components: {\n\n  },\n  inject: {\n    emitter: 'emitter',\n    $httpMessageState: '$httpMessageState',\n  },\n  // inject: ['emitter', $httpMessageState: {from: '$httpMessageState'}],\n  methods: {\n    getProducts(page = 1) {\n      this.isLoading = true;\n      const api = `${process.env.VUE_APP_API}api/${process.env.VUE_APP_PATH}/admin/products/?page=${page}`;\n      this.$http.get(api)\n        .then((res) => {\n          this.isLoading = false;\n          if (res.data.success) {\n            this.products = res.data.products;\n            this.pagination = res.data.pagination;\n          }\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n    openModal(isNew, item) {\n      if (isNew) {\n        this.tempProduct = {};\n      } else {\n        this.tempProduct = { ...item };\n      }\n      this.isNew = isNew;\n      const productComponent = this.$refs.productModal;\n      productComponent.showModal();\n    },\n    openDelModal(item) {\n      // console.log('openDelModal');\n      this.tempProduct = { ...item };\n      const delComponent = this.$refs.delModal;\n      delComponent.showModal();\n    },\n    updateProduct(item) {\n      this.tempProduct = item;\n      // create\n      let api = `${process.env.VUE_APP_API}api/${process.env.VUE_APP_PATH}/admin/product`;\n      let httpMethod = 'post';\n      // edit\n      if (!this.isNew) {\n        api = `${process.env.VUE_APP_API}api/${process.env.VUE_APP_PATH}/admin/product/${item.id}`;\n        httpMethod = 'put';\n      }\n      const productComponent = this.$refs.productModal;\n      productComponent.hideModal();\n      this.$http[httpMethod](api, { data: this.tempProduct })\n        .then((res) => {\n          console.log('aaa');\n          console.log(res.data.success);\n          if (res.data.success) {\n            this.getProducts();\n            this.$httpMessageState(res, '更新狀態');\n            // this.emitter.emit('push-message', {\n            //   style: 'success',\n            //   title: 'Update succesfully',\n            // });\n          }\n          //  else {\n          // this.emitter.emit('push-message', {\n          //   style: 'danger',\n          //   title: 'Update failed.',\n          //   content: res.data.message.join('、'),\n          // });\n          // }\n        })\n        .catch((err) => {\n          console.log('400 inside catch');\n          console.log(err.response); // 检查 API 返回的错误信息\n          console.log(this.emitter);\n          console.log(this.emitter.emit);\n          console.log(err.response.data.message);\n          this.emitter.emit('push-message', {\n            style: 'danger',\n            title: 'Update failed (API Error)',\n            content: err.response?.data?.message || 'Unknown error',\n          });\n          console.log('trigger emmit');\n        });\n    },\n    deleteProduct() {\n      const api = `${process.env.VUE_APP_API}api/${process.env.VUE_APP_PATH}/admin/product/${this.tempProduct.id}`;\n      this.$http.delete(api)\n        .then((res) => {\n          if (res.data.success) {\n            const delModalComponent = this.$refs.delModal;\n            delModalComponent.hideModal();\n            this.getProducts();\n          }\n        });\n    },\n\n  },\n  created() {\n    this.getProducts();\n  },\n};\n</script>\n"],"mappings":";;;uBAAAA,mBAAA,CAAAC,SAAA,SACEC,YAAA,CAAwCC,kBAAA;IAA9BC,MAAM,EAAEC,KAAA,CAAAC;EAAS,qC,0BAD7BC,kBAAA,ovB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}