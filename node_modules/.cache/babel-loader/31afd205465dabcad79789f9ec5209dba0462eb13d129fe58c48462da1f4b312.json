{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NavBar = _resolveComponent(\"NavBar\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_NavBar), _cache[0] || (_cache[0] = _createElementVNode(\"div\", {\n    class: \"container-fluid mt-3 position-relative\"\n  }, null, -1 /* HOISTED */)), _createVNode(_component_router_view)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createVNode","_component_NavBar","_createElementVNode","class","_component_router_view"],"sources":["C:\\Users\\yifan\\Desktop\\homework\\vuejs\\alley-vueproj\\src\\views\\DashBoard.vue"],"sourcesContent":["<template>\n  <NavBar></NavBar>\n  <div class=\"container-fluid mt-3 position-relative\">\n  </div>\n<router-view />\n</template>\n\n<script>\nimport emitter from '@/methods/emitter';\nimport NavBar from '@/components/NavBar.vue';\nimport ToastMessages from '@/components/ToastMessage.vue';\n\nexport default {\n  components: {\n    NavBar,\n    // ToastMessages,\n  },\n  provide() {\n    return {\n      emitter,\n    };\n  },\n  created() {\n    const token = document.cookie.replace(\n      /(?:(?:^|.*;\\s*)hexToken\\s*=\\s*([^;]*).*$)|^.*$/,\n      '$1',\n    );\n\n    const api = `${process.env.VUE_APP_API}api/user/check`;\n    this.$http.defaults.headers.common.Authorization = token;\n    this.$http.post(api, this.user)\n      .then((res) => {\n        console.log(res);\n        if (!res.data.success) {\n          this.$router.push('/login');\n        }\n      });\n  },\n};\n</script>\n"],"mappings":";;;;uBAAAA,mBAAA,CAAAC,SAAA,SACEC,YAAA,CAAiBC,iBAAA,G,0BACjBC,mBAAA,CACM;IADDC,KAAK,EAAC;EAAwC,6BAErDH,YAAA,CAAeI,sBAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}